{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects_new\\\\Posture_detection\\\\client\\\\src\\\\components\\\\WebcamCapture.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Webcam from 'react-webcam';\nimport io from 'socket.io-client';\nimport config from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\nconst WebcamContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.9);\n  z-index: 1000;\n  animation: ${fadeIn} 0.5s ease-in-out;\n`;\n_c = WebcamContainer;\nconst VideoContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n_c2 = VideoContainer;\nconst WebcamElement = styled(Webcam)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n_c3 = WebcamElement;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.4);\n    transform: scale(1.1);\n  }\n`;\n_c4 = CloseButton;\nconst WebcamCapture = ({\n  analysisType,\n  onAnalysisComplete\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const socketRef = useRef(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentFeedback, setCurrentFeedback] = useState(null);\n  const [analysisInterval, setAnalysisInterval] = useState(null);\n  useEffect(() => {\n    socketRef.current = io(config.SOCKET_URL);\n    socketRef.current.on('connect', () => {\n      setIsConnected(true);\n    });\n    socketRef.current.on('disconnect', () => {\n      setIsConnected(false);\n    });\n    socketRef.current.on('analysis-result', data => {\n      if (data.result && data.result.analysis) {\n        setCurrentFeedback(data.result.analysis);\n        onAnalysisComplete(data.result);\n      }\n    });\n    socketRef.current.on('analysis-error', error => {\n      console.error('Analysis error:', error);\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (analysisInterval) {\n        clearInterval(analysisInterval);\n      }\n    };\n  }, [onAnalysisComplete]);\n  const captureFrame = () => {\n    if (webcamRef.current && isConnected) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        socketRef.current.emit('analyze-frame', {\n          imageData: imageSrc,\n          analysisType: analysisType\n        });\n      }\n    }\n  };\n  const startAnalysis = () => {\n    if (!isConnected) {\n      alert('Not connected to server. Please wait and try again.');\n      return;\n    }\n    setIsAnalyzing(true);\n    setCurrentFeedback(null);\n    captureFrame();\n    const interval = setInterval(captureFrame, config.ANALYSIS_INTERVAL);\n    setAnalysisInterval(interval);\n  };\n  const stopAnalysis = () => {\n    setIsAnalyzing(false);\n    if (analysisInterval) {\n      clearInterval(analysisInterval);\n      setAnalysisInterval(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WebcamContainer, {\n    children: /*#__PURE__*/_jsxDEV(VideoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(WebcamElement, {\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        screenshotQuality: 0.8,\n        mirrored: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: stopAnalysis,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(WebcamCapture, \"bnBfV5Y7h4RNvdoSjrUEB1/Sywk=\");\n_c5 = WebcamCapture;\nexport default WebcamCapture;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"WebcamContainer\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"WebcamElement\");\n$RefreshReg$(_c4, \"CloseButton\");\n$RefreshReg$(_c5, \"WebcamCapture\");","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","keyframes","Webcam","io","config","jsxDEV","_jsxDEV","fadeIn","WebcamContainer","div","_c","VideoContainer","_c2","WebcamElement","_c3","CloseButton","button","_c4","WebcamCapture","analysisType","onAnalysisComplete","_s","webcamRef","socketRef","isAnalyzing","setIsAnalyzing","isConnected","setIsConnected","currentFeedback","setCurrentFeedback","analysisInterval","setAnalysisInterval","current","SOCKET_URL","on","data","result","analysis","error","console","disconnect","clearInterval","captureFrame","imageSrc","getScreenshot","emit","imageData","startAnalysis","alert","interval","setInterval","ANALYSIS_INTERVAL","stopAnalysis","children","ref","screenshotFormat","screenshotQuality","mirrored","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c5","$RefreshReg$"],"sources":["D:/Projects_new/Posture_detection/client/src/components/WebcamCapture.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Webcam from 'react-webcam';\r\nimport io from 'socket.io-client';\r\nimport config from '../config/config';\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.9);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst WebcamContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  z-index: 1000;\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst WebcamElement = styled(Webcam)`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.4);\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst WebcamCapture = ({ analysisType, onAnalysisComplete }) => {\r\n  const webcamRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [currentFeedback, setCurrentFeedback] = useState(null);\r\n  const [analysisInterval, setAnalysisInterval] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io(config.SOCKET_URL);\r\n\r\n    socketRef.current.on('connect', () => {\r\n      setIsConnected(true);\r\n    });\r\n\r\n    socketRef.current.on('disconnect', () => {\r\n      setIsConnected(false);\r\n    });\r\n\r\n    socketRef.current.on('analysis-result', (data) => {\r\n      if (data.result && data.result.analysis) {\r\n        setCurrentFeedback(data.result.analysis);\r\n        onAnalysisComplete(data.result);\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('analysis-error', (error) => {\r\n      console.error('Analysis error:', error);\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n      if (analysisInterval) {\r\n        clearInterval(analysisInterval);\r\n      }\r\n    };\r\n  }, [onAnalysisComplete]);\r\n\r\n  const captureFrame = () => {\r\n    if (webcamRef.current && isConnected) {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      if (imageSrc) {\r\n        socketRef.current.emit('analyze-frame', {\r\n          imageData: imageSrc,\r\n          analysisType: analysisType,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const startAnalysis = () => {\r\n    if (!isConnected) {\r\n      alert('Not connected to server. Please wait and try again.');\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    setCurrentFeedback(null);\r\n\r\n    captureFrame();\r\n    const interval = setInterval(captureFrame, config.ANALYSIS_INTERVAL);\r\n    setAnalysisInterval(interval);\r\n  };\r\n\r\n  const stopAnalysis = () => {\r\n    setIsAnalyzing(false);\r\n    if (analysisInterval) {\r\n      clearInterval(analysisInterval);\r\n      setAnalysisInterval(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WebcamContainer>\r\n      <VideoContainer>\r\n        <WebcamElement\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          screenshotQuality={0.8}\r\n          mirrored={true}\r\n        />\r\n        <CloseButton onClick={stopAnalysis}>&times;</CloseButton>\r\n      </VideoContainer>\r\n    </WebcamContainer>\r\n  );\r\n};\r\n\r\nexport default WebcamCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}